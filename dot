#! /bin/sh
#==============================================================
# 1) Setup Configuration Variables and export them
#==============================================================

# Make sure we are being sourced
if [ $_ == $0 ]; then
    echo "Script should be sourced, not run as an executable!"
    exit;
fi

catch_error() {
    echo "Signal $1 in $2:$3"
}

# Configure dotfiles Directories
DOTFILES_ROOT=$HOME/.dotfiles
DOT_CONFIG_FILE=$DOTFILES_ROOT/dotfiles.cfg
DOT_DIST_ROOT=$DOTFILES_ROOT/dist
DOT_CUST_ROOT=$DOTFILES_ROOT/custom
DOT_INST_ROOT=$DOTFILES_ROOT/install
DOT_BACK_ROOT=$DOTFILES_ROOT/backup
DOT_TMP_ROOT=$DOTFILES_ROOT/tmp
DOT_LOC=$DOTFILES_ROOT/dot
VIMCONFIG=$DOTFILES_ROOT/dotfiles.cfg
DOT_LOG_FILE=$DOT_TMP_ROOT/dotfiles.log

function main() {
source $DOT_INST_ROOT/lib.sh
source $DOT_INST_ROOT/colors.sh
source $DOT_INST_ROOT/setup.sh

#==============================================================
# 2) Async Update Update .dotfiles
#==============================================================
log_header 'Async Update'
source $DOT_INST_ROOT/update.sh | log

#==============================================================
# 3) Git/SSH config setup
#==============================================================
log_header 'Configuration'
source $DOT_INST_ROOT/configure.sh | log


#==============================================================
# 4) Binary Installation
#==============================================================
log_header 'Installation'
if [ "$(get_config 'do_install')" != "1" ]; then
    echo "Repo"
    source $DOT_INST_ROOT/repos.sh
    echo "Bin"
    source $DOT_INST_ROOT/binaries.sh
fi

#==============================================================
# 5) Place all .symlink files into the correct location
#==============================================================
log_header 'Symlink'
source $DOT_INST_ROOT/symlink.sh

#==============================================================
# 6) Source Bash files into our environment
#==============================================================
log_header 'Source'
source $DOT_INST_ROOT/source.sh


#==============================================================
# 7) Cleanup
#==============================================================
log_header 'Cleanup'
source $DOT_INST_ROOT/cleanup.sh
}

TIMEFORMAT=%R
#time main
main




if [ -z "$DEBUG_DOT" ]; then
    set +u
    set +e
    trap -- > /dev/null
fi

